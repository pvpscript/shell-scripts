#!/bin/sh

# A script to dismount mounted partitions
#
# Caveats: Code is pretty much unmaintainable. Shoutouts to field separators.
# But look at the bright side... It's POSIX compliant! :)
# So at the end of the day... It was worth it... right...? RIGHT???
#
# TODO: Rewrite this shite. Using more AWK this time.

EXCLUDE="$(echo "${@:-sda}" | sed 's/\(sd.[0-9]*\) \+/(\1)|/g;s/\(sd.[0-9]*\)$/(\1)/g')"

SIZE_PADDING=$(lsblk -prn -o SIZE,MOUNTPOINT | awk '{ if (length($2) > 0) printf "%s\n", length($1) }' | sort -rn | head -1)
MNT_PADDING=$(lsblk -prn -o MOUNTPOINT | awk '{ printf "%s\n", length($1) }' | sort -rn | head -1)
NAME_PADDING=$(lsblk -prn -o NAME,MOUNTPOINT | awk '{ if (length($2) > 0) printf "%s\n", length($1)+2 }' | sort -rn | head -1)
# length($1)+2 for the characters '[' and ']' in the printf below

usb() {
	lsblk -Ppn -o SIZE,NAME,MOUNTPOINT,LABEL | {
		while IFS= read -r line;
		do
			IFS='
			'
			set -- $(echo "$line" | sed 's/.*="\(.*\)" \+.*="\(.*\)" \+.*="\(.*\)" \+.*="\(.*\)"/"\1"\n"\2"\n"\3"\n"\4"/')
			size="$(echo "$1" | sed 's/"\(.*\)"/\1/')"
			name="$(echo "$2" | sed 's/"\(.*\)"/\1/')"
			mnt="$(echo "$3" | sed 's/"\(.*\)"/\1/')"
			label="$(echo "$4" | sed 's/"\(.*\)"/\1/')"

			if [ -n "$mnt" ];
			then
				[ -n "$label" ] && label="$(printf " (%b)" "$label")" || label=""
				echo "$name" | grep -qiE "$EXCLUDE"
				[ $? -eq 1 ] && printf "%-*s - %-*s -> %-*s%s\n" \
					$SIZE_PADDING "$size" \
					$NAME_PADDING "[$name]" \
					$MNT_PADDING "$mnt" \
					"$label"
			fi
		done
	}
}

android() {
	mp=$(cut /proc/mounts -d ' ' -f 2,3 | sed -n '/ .*mtpfs.*/p' | cut -d ' ' -f 1)
	if [ -n "$mp" ]; then
		size=$(df -h --output=size "$mp" | tail -1 | sed 's/[[:blank:]]*//')

		printf "[%s] (%s)" "$mp" "$size"
	fi
}

type="$(printf "USB\nANDROID" | dmenu -p "Dismount a partition")"
case "$type" in
	USB) mntd=$(usb | dmenu -p "Select a partition" -l 20) ;;
	ANDROID) mntd=$(android | dmenu -p "Select a device" -l 20) ;;
esac

[ -n "$mntd" ] && sudo umount "$(echo "$mntd" | sed 's/.*\[\(.*\)\].*/\1/')"
